% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blasttools.R, R/dada2analysis.R
\name{BlastParse}
\alias{BlastParse}
\title{Parse blast output}
\usage{
BlastParse(dgeList, blastRes)

BlastParse(dgeList, blastRes)
}
\arguments{
\item{dgeList}{count data in the form of DGEList}

\item{blastRes}{file with blast results assumes blastoutput option
-outfmt "6 qseqid sseqid pident length mismatch gapopen qstart qend
sstart send evalue bitscore staxids sscinames scomnames"}
}
\value{
seqTax a dataframe with annotation of results from sequence
comparisons using blast.

seqTax a dataframe with annotation of results from sequence
comparisons using blast.
}
\description{
This function will create a dataframe with sequence names,
sequences similarity from blast analysis together with taxonomic
information from NCBI. It needs the blast analysis to be locally
available. Check the example file test.out included with the
package to see the requirements of the input file.

This function will create a dataframe with sequence names,
sequences similarity from blast analysis together with taxonomic
information from NCBI.
}
\details{
Needs an active internet connection that can reach NCBI to work.
NB! for optimal performance make sure to get a token from NCBI.

NB! for optimal performance make sure to get a token from NCBI as
the function relies on a online query to the NCBI taxonomic
database. It hence also needs an active internet connection to
work.
}
\examples{
fastqR1 <- system.file("extdata", "exampleFq_R1.fastq.gz",
package = "MetaBAnalysis")
fastqR2 <- system.file("extdata", "exampleFq_R2.fastq.gz",
package = "MetaBAnalysis")
parseTest <- DadaAnalysis(fastqR1, fastqR2, muThread = FALSE)
dfForward <- as.data.frame(t(parseTest))
yForward <- edgeR::DGEList(dfForward)
BlastParse(dgeList = yForward, blastRes = system.file("extdata", "test.out", package = "MetaBAnalysis"))
fastqR1 <- system.file("extdata", "exampleFq_R1.fastq.gz",
package = "MetaBAnalysis")
fastqR2 <- system.file("extdata", "exampleFq_R2.fastq.gz",
package = "MetaBAnalysis")
parseTest <- DadaAnalysis(fastqR1, fastqR2, muThread = FALSE)
dfForward <- as.data.frame(t(parseTest))
yForward <- edgeR::DGEList(dfForward)
BlastParse(dgeList = yForward, blastRes = system.file("extdata", "test.out", package = "MetaBAnalysis"))
}
